apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: nginx
  namespace: wordpress
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 2 # tells deployment to run 2 pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      # unlike pod-nginx.yaml, the name is not included in the meta data as a unique name is
      # generated from the deployment name
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:mainline-alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: "/var/www/html"
          name: wordpress
        - mountPath: "/etc/nginx/conf.d"
          name: nginx-conf
      volumes:
      - name: wordpress
        persistentVolumeClaim:
          claimName: pvc-wordpress
      - name: nginx-conf
        configMap:
          name: configmap-nginx
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: configmap-nginx
  namespace: wordpress
data:
  site.conf: |-
    map $uri $blogname{
        ~^(?P<blogpath>/[^/]+/)files/(.*)       $blogpath ;
    }

    map $blogname $blogid{
        default -999;

        #Ref: http://wordpress.org/extend/plugins/nginx-helper/
        #include /var/www/wordpress/wp-content/plugins/nginx-helper/map.conf ;
    }
    server {
        index index.php index.html;
        server_name wordpress;
        error_log  /dev/stdout;
        access_log /dev/stdout;
        root /var/www/html;
        client_max_body_size 32M;

        location ~ ^(/[^/]+/)?files/(.+) {
            try_files /wp-content/blogs.dir/$blogid/files/$2 /wp-includes/ms-files.php?file=$2 ;
            #access_log off;     log_not_found off;
            expires max;
        }

        #avoid php readfile()
        location ^~ /blogs.dir {
            internal;
            alias /var/www/html/wp-content/blogs.dir ;
            #access_log off;     log_not_found off;
            expires max;
        }

        if (!-e $request_filename) {
            rewrite /wp-admin$ $scheme://$host$uri/ permanent;
            rewrite ^(/[^/]+)?(/wp-.*) $2 last;
            rewrite ^(/[^/]+)?(/.*\.php) $2 last;
        }

        location / {
            try_files $uri $uri/ /index.php?$args ;
        }

        #location ~ \.php$ {
        #    fastcgi_pass php;
        #}

        #add some rules for static content expiry-headers here

        location ~ \.php$ {
          fastcgi_read_timeout 600s;
          try_files $uri = 404;
          fastcgi_split_path_info ^(.+\.php)(/.+)$;
          fastcgi_pass wordpress:9000;
          fastcgi_index index.php;
          include fastcgi_params;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_param PATH_INFO $fastcgi_path_info;
          fastcgi_param PHP_VALUE "upload_max_filesize=32M \n post_max_size=32M;
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: wordpress
spec:
  type: NodePort
  ports:
  - nodePort: 32080
    port: 80
  selector:
    app: nginx